# Generated by Django 4.1 on 2022-09-20 11:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('register', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('anons', models.CharField(blank=True, max_length=150, null=True, verbose_name='Анонс')),
                ('img', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('full_text', models.TextField(verbose_name='Статья')),
                ('date', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата публикации')),
                ('creater_id', models.IntegerField(blank=True, null=True, verbose_name='Id автора')),
                ('creater_username', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя автора')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories_title', models.CharField(blank=True, max_length=30, null=True, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='LikesDislikes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_or_dislike', models.CharField(blank=True, choices=[('LIKE', 'like'), ('DISLIKE', 'dislike')], max_length=7, null=True)),
                ('state_like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.articles')),
                ('user_like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Понравились',
                'verbose_name_plural': 'Понравившиеся статьи',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=300, verbose_name='Комментарий')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата комментария')),
                ('status', models.BooleanField(default=False, verbose_name='Видимость статьи')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_articles', to='news.articles')),
                ('commentator_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commented_by', to='register.profile')),
            ],
            options={
                'verbose_name': 'Комментарии',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.AddField(
            model_name='articles',
            name='categories',
            field=models.ForeignKey(default=7, on_delete=django.db.models.deletion.CASCADE, to='news.categories'),
        ),
        migrations.AddField(
            model_name='articles',
            name='liked',
            field=models.ManyToManyField(blank=True, default=None, related_name='liked', to=settings.AUTH_USER_MODEL),
        ),
    ]
